---
# https://info.pleasantsolutions.com/Documentation/Pleasant_Password_Server/
#  M._Programmatic_Access/_Password_Server_REST_API_Documentation/Service_Models
#
# POST credential          Create a credential.
# Method                   POST
# Requires Authentication? Yes
#
# Input type               Credential
# Result type              GUID

# Check for required keys
- assert:
    that:
      - "['Name', 'Password', 'GroupId'] is subset(pps_credential.keys())"
    msg: "'Name', 'Password', and/or 'GroupId' key(s) NOT in pps_credential: {{ pps_credential }}"
  no_log: false

- assert:
    that:
      - "pps_credential.GroupId is match(match_pps_credentialgroup_id)"
    msg: "Invalid ID! pps_credential.GroupId: {{ pps_credential.GroupId }}"
  no_log: false

- set_fact:
    uri_request_body:
      Id:       "00000000-0000-0000-0000-00000000000" # *
      # Send an empty GUID 00000000-0000-0000-0000-00000000000 when creating a new Credential.
      Name:     "{{ pps_credential.Name }}" # *
      Password: "{{ pps_credential.Password }}" # *
      Username: "{{ pps_credential.Username | default('') }}" # **
      Url:      "{{ pps_credential.Url | default('') }}" # **
      Notes:    "{{ pps_credential.Notes | default('') }}" # **
      GroupId:  "{{ pps_credential.GroupId }}" # *
      #~ Created:  "{{ pps_credential.Created }}" # * [not really]
      #~ Modified: "{{ pps_credential.Modified }}" # * [not really]
      #~ Expires:  "{{ pps_credential.Expires | default(None) }}" # **
      CustomUserFields:        "{{ pps_credential.CustomUserFields | default({}) }}" # **
      CustomApplicationFields: "{{ pps_credential.CustomApplicationFields | default({}) }}" # **
      Attachments:             "{{ pps_credential.Attachments | default([]) }}" # **
      UsageComment:            "{{ pps_credential.UsageComment | default(None) }}" # **
      Tags:                    "{{ pps_credential.Tags | default([]) }}" # **

# * required field for creating an Entry
# ** omitting this field will give it a null or default value

- name: Create a credential
  uri:
    url: "{{ pps_rest_api_url }}/credential"
    method: POST
    #validate_certs: no
    return_content: yes
    body: '{{ uri_request_body | to_json }}'
    headers:
      Authorization: "{{ pps_oauth2_token.token_type }} {{ pps_oauth2_token.access_token }}"
      Content-Type: "application/json"
      Cache-Control: "no-cache"
  register: uri_result
  delegate_to: localhost

# "uri_result": {
#     "cache_control": "no-cache, no-store, must-revalidate",
#     "changed": false,
#     "connection": "close",
#     "content": "\"29183a29-3d94-472a-b941-365b3da882f5\"",
#     "content_length": "38",
#     "content_type": "application/json; charset=utf-8",
#     "cookies": {},
#     "date": "Sat, 30 Mar 2019 10:08:07 GMT",
#     "expires": "-1",
#     "failed": false,
#     "json": "29183a29-3d94-472a-b941-365b3da882f5",
#     "msg": "OK (38 bytes)",
#     "pragma": "no-cache",
#     "redirected": false,
#     "server": "[OBFUSCATED]",
#     "status": 200,
#     "url": "https://localhost:10001/api/v4/rest/credential",
#     "x_aspnet_version": "[OBFUSCATED]",
#     "x_content_type_options": "nosniff",
#     "x_powered_by": "ASP.NET",
#     "x_ua_compatible": "IE=Edge",
#     "x_xss_protection": "1"
# }

- set_fact:
    pps_create_credential_result: "{{ uri_result.json }}"
