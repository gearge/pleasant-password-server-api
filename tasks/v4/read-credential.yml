---
# https://info.pleasantsolutions.com/Documentation/Pleasant_Password_Server/
#  M._Programmatic_Access/_Password_Server_REST_API_Documentation/Service_Models
#
# GET credential/:id       Read a credential.
# Method                   GET
# Requires Authentication? Yes
#
# Parameters   
#   id                     GUID for credential
#
# Result type              Credential
# ------------------------------------------------------------------------------
# GET credential/:id/password  Get the password for a credential.
# Restriction                  Can only be used when a usage comment is not
#                              required.
# Method                       GET
# Requires Authentication?     Yes
#
# Parameters   
#   id                         GUID for credential
#
# Result type                  String

# Check for required keys
- assert:
    that:
      - "['Id'] is subset(pps_credential.keys())"
    msg: "'Id' key NOT in pps_credential: {{ pps_credential }}"
  no_log: false

- assert:
    that:
      - "pps_credential.Id is match(match_pps_credential_id)"
    msg: "Invalid ID! pps_credential.Id: {{ pps_credential.Id }}"
  no_log: false

- name: Read a credential
  uri:
    url: "{{ pps_rest_api_url }}/credential/{{ pps_credential.Id }}"
    method: GET
    #validate_certs: no
    return_content: yes
    headers:
      Authorization: "{{ pps_oauth2_token.token_type }} {{ pps_oauth2_token.access_token }}"
      Content-Type: "application/json"
      Cache-Control: "no-cache"
  register: uri_result
  delegate_to: localhost

# "uri_result": {
#   ...
#     "json": {
#         "Attachments": [],
#         "CommentPrompts": {
#             "AskForCommentOnModifyEntries": false,
#             "AskForCommentOnModifyFolders": false,
#             "AskForCommentOnMoveEntries": false,
#             "AskForCommentOnMoveFolders": false,
#             "AskForCommentOnViewOffline": false,
#             "AskForCommentOnViewPassword": false
#         },
#         "Created": "2019-03-29T09:29:59+13:00",
#         "CustomApplicationFields": {},
#         "CustomUserFields": {},
#         "Expires": null,
#         "GroupId": "9e1a4be5-2d57-4dee-a907-bb12d0a4efaf",
#         "HasModifyEntriesAccess": true,
#         "HasViewEntryContentsAccess": true,
#         "Id": "02c9167b-6894-4617-851c-f49e5fe7c1ef",
#         "Modified": "2019-03-29T09:29:59+13:00",
#         "Name": "test",
#         "Notes": "",
#         "Password": null,
#         "Tags": [
#             {
#                 "Name": "test"
#             }
#         ],
#         "Url": "",
#         "UsageComment": null,
#         "Username": ""
#     },
#   ...
# }

- set_fact:
    pps_read_credential_result: "{{ pps_credential | combine(uri_result.json) }}"

- name: Read the credential password
  uri:
    url: "{{ pps_rest_api_url }}/credential/{{ pps_credential.Id }}/password"
    method: GET
    #validate_certs: no
    return_content: yes
    headers:
      Authorization: "{{ pps_oauth2_token.token_type }} {{ pps_oauth2_token.access_token }}"
      Content-Type: "application/json"
      Cache-Control: "no-cache"
  register: uri_result
  delegate_to: localhost

# "uri_result": {
#     "cache_control": "no-cache, no-store, must-revalidate",
#     "changed": false,
#     "connection": "close",
#     "content": "\"admin\"",
#     "content_length": "41",
#     "content_type": "application/json; charset=utf-8",
#     "cookies": {},
#     "date": "Sat, 30 Mar 2019 10:08:07 GMT",
#     "expires": "-1",
#     "failed": false,
#     "json": "admin",
#     "msg": "OK (41 bytes)",
#     "pragma": "no-cache",
#     "redirected": false,
#     "server": "[OBFUSCATED]",
#     "status": 200,
#     "url": "https://localhost:10001/api/v4/rest/credential/02c9167b-6894-4617-851c-f49e5fe7c1ef/password",
#     "x_aspnet_version": "[OBFUSCATED]",
#     "x_content_type_options": "nosniff",
#     "x_powered_by": "ASP.NET",
#     "x_ua_compatible": "IE=Edge",
#     "x_xss_protection": "1"
# }

- set_fact:
    pps_read_credential_result: "{{ pps_read_credential_result | combine({'Password': uri_result.json}) }}"

- set_fact:
    pps_read_credential_results: "{{ pps_read_credential_results + [ pps_read_credential_result ] }}"
  when: pps_read_credential_results is defined # We are called in a loop
